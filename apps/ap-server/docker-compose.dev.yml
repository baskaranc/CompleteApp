version: "3"
services:
  redis:
    container_name: ${REDIS_HOST}
    image: redis:6
    ports:
      - ${REDIS_PORT}:6379
    volumes:
      - redis:/data
  db:
    image: mongo
    command: --default-authentication-plugin=mysql_native_password
    restart: always
    ports:
      - ${DB_PORT}:27017
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
      MONGO_INITDB_ROOT_USERNAME: ${DB_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${DB_PASSWORD}
      MONGO_INITDB_DATABASE: ${DB_NAME}
      MONGO_REPLICA_SET_NAME: rs0
    healthcheck:
      test: "test $$(mongosh --quiet -u  $${MONGO_INITDB_ROOT_USERNAME} -p
        $${MONGO_INITDB_ROOT_PASSWORD} --eval \"try { rs.initiate({ _id:
        '\"rs0\"',members: [{ _id: 0, host: '\"localhost\"' }] }).ok } catch (_)
        { rs.status().ok}\") -eq 1"
      timeout: 10s
      interval: 10s
      retries: 10
      start_period: 5s
    entrypoint:
      - /bin/bash
      - -c
      - openssl rand -base64 741 > /data/cert.crt; chmod 400 /data/cert.crt &&
        chown 999 /data/cert.crt; /usr/local/bin/docker-entrypoint.sh mongod
        --bind_ip_all --keyFile /data/cert.crt --replSet rs0
    volumes:
      - mongo:/var/lib/mongosql/data
  adminer:
    image: adminer
    restart: always
    ports:
      - 1234:8080
volumes:
  redis:
    driver: local
  mysql: ~
  mongo: ~
